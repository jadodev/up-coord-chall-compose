version: '3.8'

services:
  ms-shipment-service:
    build: ../ms-shipment-service
    container_name: ms-shipment-service
    working_dir: /app
    volumes:
      - ../ms-shipment-service:/app
    environment:
      - PORT=3000
      - KAFKA_CLIENT_ID=delivery-shipment-service
      - KAFKA_HOST=kafka
      - KAFKA_CONSUMER_GROUP=delivery-service-group
    ports:
      - "3000:3000"
    depends_on:
      - mysql
      - kafka
    command: ["./wait-for-it.sh", "mysql:3306", "--", "npm", "run", "dev"]
    networks:
      - app-network

  ms-delivery-status:
    build: ../ms-delivery-status
    container_name: ms-delivery-status
    working_dir: /app
    volumes:
      - ../ms-delivery-status:/app
    ports:
      - "4000:4000"
    depends_on:
      - mysql
      - kafka
    command: ["./wait-for-it.sh", "mysql:3306", "--", "npm", "run", "dev"]
    environment:
      - PORT=4000
      - DB_HOST=mysql
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=mydb
      - KAFKA_HOST=kafka
    networks:
      - app-network

  ms-dispatch-service:
    build: ../ms-dispatch-service
    container_name: ms-dispatch-service
    working_dir: /app
    volumes:
      - ../ms-dispatch-service:/app
    ports:
      - "4050:4050"
    depends_on:
      - mysql
      - kafka
    command: ["./wait-for-it.sh", "mysql:3306", "--", "npm", "run", "dev"]
    environment:
      - PORT=4050
      - DB_HOST=mysql
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=mydb
      - KAFKA_HOST=kafka
      - KAFKA_CLIENT_ID=delivery-shipment-service
      - KAFKA_CONSUMER_GROUP=delivery-service-group
    networks:
      - app-network

  ms-driver-operations:
    build: ../ms-driver-operations
    container_name: ms-driver-operations
    working_dir: /app
    volumes:
      - ../ms-driver-operations:/app
    ports:
      - "4080:4080"
    depends_on:
      - mysql
      - kafka
    command: ["./wait-for-it.sh", "mysql:3306", "--", "npm", "run", "dev"]
    environment:
      - PORT=4080
      - DB_HOST=mysql
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=mydb
      - KAFKA_HOST=kafka
    networks:
      - app-network

  api-gateway:
    build: ../api-gateway-coord
    container_name: api-gateway-coord
    working_dir: /app
    volumes:
      - ../api-gateway-coord:/app
    environment:
      - PORT=5000
      - REDIS_URL=redis://redis:6379
      - SHIPMENT_SERVICE_URL=http://ms-shipment-service:3000
      - DELIVERY_STATUS_URL=http://ms-delivery-status:4000
      - DISPATCH_SERVICE_URL=http://ms-dispatch-service:4050
      - DRIVER_OPERATIONS_URL=http://ms-driver-operations:4080
    ports:
      - "5000:5000"
    depends_on:
      - ms-shipment-service
      - ms-delivery-status
      - ms-dispatch-service
      - ms-driver-operations
      - redis
    command: ["./wait-for-it.sh", "redis:6379", "--", "npm", "run", "start"]
    networks:
      - app-network

  mysql:
    image: mysql:5.7
    build: ./mysql
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: mydb
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9093:9093"
      - "9094:9094"
    depends_on:
      - zookeeper
    networks:
      - app-network

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
